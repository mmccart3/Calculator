{"version":3,"sources":["App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","mySum","setMySum","tmpSum","tmp2Sum","tmp3Sum","className","calcButtons","map","item","index","style","onClick","val","join","evaluate","Math","floor","shift","alias","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qyBAqDeA,EA7CH,WACV,MAAyBC,mBAAS,CAAC,IAAnC,mBAAOC,EAAP,KAAaC,EAAb,KACIC,EAAS,CAAC,GACVC,EAAU,EACVC,EAAU,EAwBd,OACE,sBAAKC,UAAU,MAAf,UACA,4CAEE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBL,IACzB,qBAAKK,UAAU,UAAf,SACCC,EAAYC,KAAI,SAACC,EAAMC,GAAP,OACf,yBAAQJ,UAAS,cAASG,EAAKE,OAAqBC,QAAS,WA7BrE,IAAuBC,EACZ,WADYA,EA6BiEJ,EAAKI,KA5BxEX,EAAS,GACX,MAARW,GACPV,EAASF,EAAMa,KAAK,IACpBV,EAAUW,YAASZ,GACnBE,EAAUW,KAAKC,MAAc,IAARb,GAAkB,IAEvCF,EAAS,CAACG,MAIW,KAFnBF,EAAM,sBAAOF,GAAP,CAAcY,KAER,IAA2B,MAAbV,EAAO,IAAaA,EAAOe,QAErDhB,EAASC,KAgBP,cAA6FM,EAAKU,MAAQV,EAAKU,MAAOV,EAAKI,MAA9EH,eChCxCU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.445f2314.chunk.js","sourcesContent":["import './App.css';\nimport {useState} from \"react\"\nimport calcButtons from \"./buttons.json\"\nimport {evaluate} from \"mathjs\"\n// import Setsum2 from \"./modules/Setsumfunc\"\n\n\n\nconst App = () => {\n  const [mySum,setMySum] = useState([0])\n  let tmpSum = [0]\n  let tmp2Sum = 0\n  let tmp3Sum = 0\n\n  \n  function handleButton (val) {\n    if(val===\"clear\") {setMySum(0)}\n    else if (val === \"=\"){\n      tmpSum = mySum.join(\"\")\n      tmp2Sum = evaluate(tmpSum)\n      tmp3Sum = Math.floor(tmp2Sum*10000000)/10000000\n     // limits number of decimal places displayed\n      setMySum([tmp3Sum])}\n    else {\n        tmpSum = [...mySum, val]\n        // spread operator needed to take a copy of the data not just a reference\n        if ((tmpSum[0] === 0) && (tmpSum[1] !==\".\")) {tmpSum.shift()}\n        // decimal point check added to all decimal numbers less than one\n        setMySum(tmpSum)\n        }\n        \n    }\n  \n\n  \n  \n  return (\n    <div className=\"App\">\n    <h1>Calculator</h1>\n\n      <div className=\"calcWrapper\">\n        <div className=\"screen\">{mySum}</div>\n        <div className=\"buttons\">\n        {calcButtons.map((item, index) => (\n          <button className={`btn ${item.style}`} key={index} onClick={() => handleButton(item.val)}> {item.alias ? item.alias: item.val}\n          </button>\n        ))}\n      </div>\n    </div>\n  </div>\n  )\n}        \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}